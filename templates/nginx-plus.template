{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This template creates the Amazon EC2 instances and related resources for the NGINX Plus Quick Start. QS(5002)",
    "Parameters": {
        "AvailabilityZones": {
            "Description": "VPC availability zones for AutoScaling Instances",
            "Type": "List<AWS::EC2::AvailabilityZone::Name>"
        },
        "BastionAccessCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "Default": "0.0.0.0/0",
            "Description": "Allowed CIDR Block for external access to the bastion host",
            "Type": "String"
        },
        "BastionHostInstanceType": {
            "AllowedValues": [
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large"
            ],
            "Default": "t2.micro",
            "Description": "Amazon EC2 instance type for the Bastion Host.",
            "Type": "String"
        },
        "KeyPairName": {
            "Description": "Public/private key pair",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "NGINX1PrivateIP": {
            "Description": "IP for NGINX instance in private subnet 1 in Availability Zone 1",
            "Type": "String",
            "Default": "10.0.0.21"
        },
        "NGINX2PrivateIP": {
            "Description": "IP for NGINX instance in private subnet 2 in Availability Zone 2",
            "Type": "String",
            "Default": "10.0.32.21"
        },
        "NGINXInstanceType": {
            "AllowedValues": [
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large"
            ],
            "Default": "t2.micro",
            "Description": "Amazon EC2 instance type for the NGINX Plus load balancing and application instances",
            "Type": "String"
        },
        "PrivateSubnet1ID": {
            "Description": "ID of the private subnet 1 in Availability Zone 1 (e.g., subnet-a0246dcd)",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "PrivateSubnet2ID": {
            "Description": "ID of the private subnet 2 in Availability Zone 2 (e.g., subnet-a0246dcd)",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "PublicSubnet1ID": {
            "Description": "ID of the public subnet 1 in Availability Zone 1 (e.g., subnet-e3246d8e)",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "PublicSubnet2ID": {
            "Description": "ID of the public subnet 2 in Availability Zone 2 (e.g., subnet-e3246d8e)",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "QSS3BucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Default": "quickstart-reference",
            "Description": "S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Type": "String"
        },
        "QSS3KeyPrefix": {
            "AllowedPattern": "^[0-9a-zA-Z-]+(/[0-9a-zA-Z-]+)*$",
            "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with forward slash (/) because they are automatically appended.",
            "Default": "nginx/plus/latest",
            "Description": "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with forward slash (/) because they are automatically appended.",
            "Type": "String"
        },
        "VPCID": {
            "Description": "VPC ID",
            "Type": "AWS::EC2::VPC::Id"
        },
        "VPCCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "Default": "10.0.0.0/16",
            "Description": "CIDR block for the VPC",
            "Type": "String"
        }
    },
    "Rules": {
        "SubnetsInVPC": {
            "Assertions": [
                {
                    "Assert": {
                        "Fn::EachMemberIn": [
                            {
                                "Fn::ValueOfAll": [
                                    "AWS::EC2::Subnet::Id",
                                    "VpcId"
                                ]
                            },
                            {
                                "Fn::RefAll": "AWS::EC2::VPC::Id"
                            }
                        ]
                    },
                    "AssertDescription": "All subnets must in the VPC"
                }
            ]
        }
    },
    "Mappings": {
        "AWSAMIRegionMap": {
            "AMI": {
                "AMZNLINUX": "amzn-ami-hvm-2016.03.3.x86_64-gp2",
                "NGINXPLUSAMZNLINUXHVM": "nginx-plus-ami-amazon-linux-hvm-v1.1-20160426.x86_64-ebs-53d2479a-ccf6-4126-bd04-05e5c885727f-ami-3aedf750.3"
            },
            "ap-northeast-1": {
                "AMZNLINUX": "ami-374db956",
                "NGINXPLUSAMZNLINUXHVM": "ami-79baa317"
            },
            "ap-northeast-2": {
                "AMZNLINUX": "ami-2b408b45",
                "NGINXPLUSAMZNLINUXHVM": "ami-6325ed0d"
            },
            "ap-south-1": {
                "AMZNLINUX": "ami-ffbdd790",
                "NGINXPLUSAMZNLINUXHVM": "ami-e2b9d38d"
            },
            "ap-southeast-1": {
                "AMZNLINUX": "ami-a59b49c6",
                "NGINXPLUSAMZNLINUXHVM": "ami-8b7bafe8"
            },
            "ap-southeast-2": {
                "AMZNLINUX": "ami-dc361ebf",
                "NGINXPLUSAMZNLINUXHVM": "ami-aefed3cd"
            },
            "eu-central-1": {
                "AMZNLINUX": "ami-ea26ce85",
                "NGINXPLUSAMZNLINUXHVM": "ami-9d7a99f2"
            },
            "eu-west-1": {
                "AMZNLINUX": "ami-f9dd458a",
                "NGINXPLUSAMZNLINUXHVM": "ami-a1f876d2"
            },
            "sa-east-1": {
                "AMZNLINUX": "ami-6dd04501",
                "NGINXPLUSAMZNLINUXHVM": "ami-5237b93e"
            },
            "us-east-1": {
                "AMZNLINUX": "ami-6869aa05",
                "NGINXPLUSAMZNLINUXHVM": "ami-ff849e95"
            },
            "us-west-1": {
                "AMZNLINUX": "ami-31490d51",
                "NGINXPLUSAMZNLINUXHVM": "ami-04eb1b64"
            },
            "us-west-2": {
                "AMZNLINUX": "ami-7172b611",
                "NGINXPLUSAMZNLINUXHVM": "ami-04eb1b64"
            }
        },
        "AWSInfoRegionMap": {
            "ap-northeast-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "ap-northeast-2": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "ap-south-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "ap-southeast-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "ap-southeast-2": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "eu-central-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "eu-west-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "sa-east-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "us-east-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "us-gov-west-1": {
                "Partition": "aws-us-gov",
                "QuickStartS3URL": "https://s3-us-gov-west-1.amazonaws.com"
            },
            "us-west-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "us-west-2": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            }
        }
    },
    "Resources": {
        "BastionHostSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enables SSH access to the NGINX Plus Instances.",
                "VpcId": {
                    "Ref": "VPCID"
                },
                "SecurityGroupIngress": [{
                    "IpProtocol": "tcp",
                    "FromPort": "22",
                    "ToPort": "22",
                    "CidrIp": {
                        "Ref": "BastionAccessCIDR"
                    }
                }],
                "Tags": [{
                    "Key": "Name",
                    "Value": "NGINXBastionHostSecurityGroup"
                }, {
                    "Key": "Environment",
                    "Value": "Test"
                }]
            }
        },
        "NGINXELBSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enables access to the NGINX ELB",
                "VpcId": {
                    "Ref": "VPCID"
                },
                "SecurityGroupIngress": [{
                    "IpProtocol": "tcp",
                    "FromPort": "80",
                    "ToPort": "80",
                    "CidrIp": "0.0.0.0/0"
                }, {

                    "IpProtocol": "tcp",
                    "FromPort": "8080",
                    "ToPort": "8080",
                    "CidrIp": "0.0.0.0/0"
                }],
                "Tags": [{
                    "Key": "Name",
                    "Value": "NGINXELBSecurityGroup"
                }, {
                    "Key": "Environment",
                    "Value": "Test"
                }]
            }
        },
        "NGINXInstancesSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enables access to the NGINX Web Server.",
                "VpcId": {
                    "Ref": "VPCID"
                },
                "SecurityGroupIngress": [{
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "SourceSecurityGroupId": {
                            "Fn::GetAtt": [
                                "BastionHostSecurityGroup",
                                "GroupId"
                            ]
                        }
                    }, {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": "0.0.0.0/0"
                    }, {

                        "IpProtocol": "tcp",
                        "FromPort": "8080",
                        "ToPort": "8080",
                        "CidrIp": "0.0.0.0/0"
                    },

                    {

                        "IpProtocol": "tcp",
                        "FromPort": "8100",
                        "ToPort": "8100",
                        "CidrIp": "0.0.0.0/0"
                    }, {

                        "IpProtocol": "tcp",
                        "FromPort": "8200",
                        "ToPort": "8200",
                        "CidrIp": "0.0.0.0/0"
                    }
                ],
                "Tags": [{
                    "Key": "Name",
                    "Value": "NGINXInstancesSecurityGroup"
                }, {
                    "Key": "Environment",
                    "Value": "Test"
                }]
            }
        },
        "BastionHost": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSAMIRegionMap", {
                            "Ref": "AWS::Region"
                        },
                        "AMZNLINUX"
                    ]
                },
                "InstanceType": {
                    "Ref": "BastionHostInstanceType"
                },
                "NetworkInterfaces": [{
                    "DeleteOnTermination": "true",
                    "DeviceIndex": 0,
                    "SubnetId": {
                        "Ref": "PublicSubnet1ID"
                    },
                    "GroupSet": [{
                        "Ref": "BastionHostSecurityGroup"
                    }]
                }],
                "Tags": [{
                    "Key": "Name",
                    "Value": "NGINX BastionHost"
                }, {
                    "Key": "Environment",
                    "Value": "Test"
                }],
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "", [
                                "#!/bin/bash -xe\n",
                                "\n",
                                "yum update -y",
                                "\n"
                            ]
                        ]
                    }
                }
            }
        },
        "NGINXWebApp1": {
            "Type": "AWS::EC2::Instance",
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "bootstrap_install": [
                            "install_cfn",
                            "prepare_system",
                            "configure_nginx"
                        ]
                    },
                    "install_cfn": {
                        "files": {
                            "/etc/cfn/cfn-hup.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "", [
                                            "[main]\n",
                                            "stack=", {
                                                "Ref": "AWS::StackId"
                                            },
                                            "\n",
                                            "region=", {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                },
                                "mode": "000400",
                                "owner": "root",
                                "group": "root"
                            },
                            "/etc/cfn/hooks.d/cfn-auto-reloader.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "", [
                                            "[cfn-auto-reloader-hook]\n",
                                            "triggers=post.update\n",
                                            "path=Resources.NGINXWebApp1.Metadata.AWS::CloudFormation::Init\n",
                                            "action=/opt/aws/bin/cfn-init -v ",
                                            "         --stack ", {
                                                "Ref": "AWS::StackName"
                                            },
                                            "         --resource NGINXWebApp1 ",
                                            "         --configsets bootstrap_install ",
                                            "         --region ", {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                },
                                "mode": "000400",
                                "owner": "root",
                                "group": "root"
                            }
                        },
                        "services": {
                            "sysvinit": {
                                "cfn-hup": {
                                    "enabled": "true",
                                    "ensureRunning": "true",
                                    "files": [
                                        "/etc/cfn/cfn-hup.conf",
                                        "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
                                    ]
                                }
                            }
                        }
                    },
                    "prepare_system": {
                        "packages": {
                            "yum": {
                                "php70": [],
                                "php70-fpm": []
                            }
                        },
                        "commands": {
                            "01-mkdir /usr/share/nginx/app1": {
                                "command": "mkdir /usr/share/nginx/app1"
                            },
                            "02-mkdir /usr/share/nginx/php": {
                                "command": "mkdir /usr/share/nginx/php"
                            },
                            "03-create index.html": {
                                "command": "echo \"WebAPP1 NGINX Quick Start\" > /usr/share/nginx/app1/index.html"
                            },
                            "04-mkdir /usr/share/nginx/images": {
                                "command": "mkdir /usr/share/nginx/images"
                            }
                        }
                    },
                    "configure_nginx": {
                        "files": {
                            "/etc/php-fpm-7.0.d/www.conf": {
                                "source": {
                                    "Fn::Join": [
                                        "/",
                                        [
                                            {
                                                "Fn::FindInMap": [
                                                    "AWSInfoRegionMap",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    "QuickStartS3URL"
                                                ]
                                            },
                                            {
                                                "Ref": "QSS3BucketName"
                                            },
                                            {
                                                "Ref": "QSS3KeyPrefix"
                                            },
                                            "scripts/www.conf"
                                        ]
                                    ]
                                },
                                "owner": "nginx",
                                "group": "nginx"
                            },
                            "/etc/php-7.0.ini": {
                                "source": {
                                    "Fn::Join": [
                                        "/",
                                        [
                                            {
                                                "Fn::FindInMap": [
                                                    "AWSInfoRegionMap",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    "QuickStartS3URL"
                                                ]
                                            },
                                            {
                                                "Ref": "QSS3BucketName"
                                            },
                                            {
                                                "Ref": "QSS3KeyPrefix"
                                            },
                                            "cripts/php-7.0.ini"
                                        ]
                                    ]
                                }
                            },
                            "/usr/share/nginx/php/landing.php": {
                                "source": {
                                    "Fn::Join": [
                                        "/",
                                        [
                                            {
                                                "Fn::FindInMap": [
                                                    "AWSInfoRegionMap",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    "QuickStartS3URL"
                                                ]
                                            },
                                            {
                                                "Ref": "QSS3BucketName"
                                            },
                                            {
                                                "Ref": "QSS3KeyPrefix"
                                            },
                                            "scripts/landing.php"
                                        ]
                                    ]
                                }
                            },
                            "/usr/share/nginx/images/nginx.png": {
                                "source": {
                                    "Fn::Join": [
                                        "/",
                                        [
                                            {
                                                "Fn::FindInMap": [
                                                    "AWSInfoRegionMap",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    "QuickStartS3URL"
                                                ]
                                            },
                                            {
                                                "Ref": "QSS3BucketName"
                                            },
                                            {
                                                "Ref": "QSS3KeyPrefix"
                                            },
                                            "scripts/nginx.png"
                                        ]
                                    ]
                                }
                            },
                            "/usr/share/nginx/images/favicon.ico": {
                                "source": {
                                    "Fn::Join": [
                                        "/",
                                        [
                                            {
                                                "Fn::FindInMap": [
                                                    "AWSInfoRegionMap",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    "QuickStartS3URL"
                                                ]
                                            },
                                            {
                                                "Ref": "QSS3BucketName"
                                            },
                                            {
                                                "Ref": "QSS3KeyPrefix"
                                            },
                                            "scripts/favicon.ico"
                                        ]
                                    ]
                                }
                            },
                            "/etc/nginx/conf.d/app1.conf": {
                                "source": {
                                    "Fn::Join": [
                                        "/",
                                        [
                                            {
                                                "Fn::FindInMap": [
                                                    "AWSInfoRegionMap",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    "QuickStartS3URL"
                                                ]
                                            },
                                            {
                                                "Ref": "QSS3BucketName"
                                            },
                                            {
                                                "Ref": "QSS3KeyPrefix"
                                            },
                                            "scripts/app1.conf"
                                        ]
                                    ]
                                }
                            }
                        },
                        "services": {
                            "sysvinit": {
                                "php-fpm": {
                                    "enabled": "true",
                                    "ensureRunning": "true",
                                    "files": ["/etc/php-fpm-7.0.d/www.conf"]
                                },
                                "nginx": {
                                    "enabled": "true",
                                    "ensureRunning": "true",
                                    "files": ["/etc/nginx/conf.d/app1.conf"]
                                }
                            }
                        }
                    }
                }
            },
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSAMIRegionMap", {
                            "Ref": "AWS::Region"
                        },
                        "NGINXPLUSAMZNLINUXHVM"
                    ]
                },
                "InstanceType": {
                    "Ref": "NGINXInstanceType"
                },
                "NetworkInterfaces": [{
                    "DeleteOnTermination": "true",
                    "DeviceIndex": 0,
                    "SubnetId": {
                        "Ref": "PrivateSubnet1ID"
                    },
                    "PrivateIpAddresses": [{
                        "Primary": "true",
                        "PrivateIpAddress": {
                            "Ref": "NGINX1PrivateIP"
                        }
                    }],
                    "GroupSet": [{
                        "Ref": "NGINXInstancesSecurityGroup"
                    }]
                }],
                "Tags": [{
                    "Key": "Name",
                    "Value": "NGINXWebApp1"
                }, {
                    "Key": "Environment",
                    "Value": "Test"
                }],
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "", [
                                "#!/bin/bash -xe\n",
                                "hostname nginxwebapp1.example.com",
                                "\n",
                                "yum update -y",
                                "\n",
                                "/opt/aws/bin/cfn-init -v ",
                                "         --stack ", {
                                    "Ref": "AWS::StackName"
                                },
                                " --resource NGINXWebApp1",
                                " --configsets bootstrap_install ",
                                " --region ", {
                                    "Ref": "AWS::Region"
                                },
                                "\n"
                            ]
                        ]
                    }
                }
            }
        },
        "NGINXWebApp2": {
            "Type": "AWS::EC2::Instance",
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "bootstrap_install": [
                            "install_cfn",
                            "prepare_system",
                            "configure_nginx"
                        ]
                    },
                    "install_cfn": {
                        "files": {
                            "/etc/cfn/cfn-hup.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "", [
                                            "[main]\n",
                                            "stack=", {
                                                "Ref": "AWS::StackId"
                                            },
                                            "\n",
                                            "region=", {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                },
                                "mode": "000400",
                                "owner": "root",
                                "group": "root"
                            },
                            "/etc/cfn/hooks.d/cfn-auto-reloader.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "", [
                                            "[cfn-auto-reloader-hook]\n",
                                            "triggers=post.update\n",
                                            "path=Resources.NGINXWebApp2.Metadata.AWS::CloudFormation::Init\n",
                                            "action=/opt/aws/bin/cfn-init -v ",
                                            "         --stack ", {
                                                "Ref": "AWS::StackName"
                                            },
                                            "         --resource NGINXWebApp2 ",
                                            "         --configsets bootstrap_install ",
                                            "         --region ", {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                },
                                "mode": "000400",
                                "owner": "root",
                                "group": "root"
                            }
                        },
                        "services": {
                            "sysvinit": {
                                "cfn-hup": {
                                    "enabled": "true",
                                    "ensureRunning": "true",
                                    "files": [
                                        "/etc/cfn/cfn-hup.conf",
                                        "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
                                    ]
                                }
                            }
                        }
                    },
                    "prepare_system": {
                        "packages": {
                            "yum": {
                                "php70": [],
                                "php70-fpm": []
                            }
                        },
                        "commands": {
                            "01-mkdir /usr/share/nginx/app2": {
                                "command": "mkdir /usr/share/nginx/app2"
                            },
                            "02-mkdir /usr/share/nginx/php": {
                                "command": "mkdir /usr/share/nginx/php"
                            },
                            "03-create index.html": {
                                "command": "echo \"WebAPP2 NGINX Quick Start\" > /usr/share/nginx/app2/index.html"
                            },
                            "04-mkdir /usr/share/nginx/images": {
                                "command": "mkdir /usr/share/nginx/images"
                            }
                        }
                    },
                    "configure_nginx": {
                        "files": {
                            "/etc/php-fpm-7.0.d/www.conf": {
                                "source": {
                                    "Fn::Join": [
                                        "/",
                                        [
                                            {
                                                "Fn::FindInMap": [
                                                    "AWSInfoRegionMap",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    "QuickStartS3URL"
                                                ]
                                            },
                                            {
                                                "Ref": "QSS3BucketName"
                                            },
                                            {
                                                "Ref": "QSS3KeyPrefix"
                                            },
                                            "scripts/www.conf"
                                        ]
                                    ]
                                },
                                "owner": "nginx",
                                "group": "nginx"
                            },
                            "/etc/php-7.0.ini": {
                                "source": {
                                    "Fn::Join": [
                                        "/",
                                        [
                                            {
                                                "Fn::FindInMap": [
                                                    "AWSInfoRegionMap",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    "QuickStartS3URL"
                                                ]
                                            },
                                            {
                                                "Ref": "QSS3BucketName"
                                            },
                                            {
                                                "Ref": "QSS3KeyPrefix"
                                            },
                                            "scripts/php-7.0.ini"
                                        ]
                                    ]
                                }
                            },
                            "/usr/share/nginx/php/landing.php": {
                                "source": {
                                    "Fn::Join": [
                                        "/",
                                        [
                                            {
                                                "Fn::FindInMap": [
                                                    "AWSInfoRegionMap",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    "QuickStartS3URL"
                                                ]
                                            },
                                            {
                                                "Ref": "QSS3BucketName"
                                            },
                                            {
                                                "Ref": "QSS3KeyPrefix"
                                            },
                                            "scripts/landing.php"
                                        ]
                                    ]
                                }
                            },
                            "/usr/share/nginx/images/nginx.png": {
                                "source": {
                                    "Fn::Join": [
                                        "/",
                                        [
                                            {
                                                "Fn::FindInMap": [
                                                    "AWSInfoRegionMap",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    "QuickStartS3URL"
                                                ]
                                            },
                                            {
                                                "Ref": "QSS3BucketName"
                                            },
                                            {
                                                "Ref": "QSS3KeyPrefix"
                                            },
                                            "scripts/nginx.png"
                                        ]
                                    ]
                                }
                            },
                            "/usr/share/nginx/images/favicon.ico": {
                                "source": {
                                    "Fn::Join": [
                                        "/",
                                        [
                                            {
                                                "Fn::FindInMap": [
                                                    "AWSInfoRegionMap",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    "QuickStartS3URL"
                                                ]
                                            },
                                            {
                                                "Ref": "QSS3BucketName"
                                            },
                                            {
                                                "Ref": "QSS3KeyPrefix"
                                            },
                                            "scripts/favicon.ico"
                                        ]
                                    ]
                                }
                            },
                            "/etc/nginx/conf.d/app2.conf": {
                                "source": {
                                    "Fn::Join": [
                                        "/",
                                        [
                                            {
                                                "Fn::FindInMap": [
                                                    "AWSInfoRegionMap",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    "QuickStartS3URL"
                                                ]
                                            },
                                            {
                                                "Ref": "QSS3BucketName"
                                            },
                                            {
                                                "Ref": "QSS3KeyPrefix"
                                            },
                                            "scripts/app2.conf"
                                        ]
                                    ]
                                }
                            }
                        },
                        "services": {
                            "sysvinit": {
                                "php-fpm": {
                                    "enabled": "true",
                                    "ensureRunning": "true",
                                    "files": ["/etc/php-fpm-7.0.d/www.conf"]
                                },
                                "nginx": {
                                    "enabled": "true",
                                    "ensureRunning": "true",
                                    "files": ["/etc/nginx/conf.d/app2.conf"]
                                }
                            }
                        }
                    }
                }
            },
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSAMIRegionMap", {
                            "Ref": "AWS::Region"
                        },
                        "NGINXPLUSAMZNLINUXHVM"
                    ]
                },
                "InstanceType": {
                    "Ref": "NGINXInstanceType"
                },
                "NetworkInterfaces": [{
                    "DeleteOnTermination": "true",
                    "DeviceIndex": 0,
                    "SubnetId": {
                        "Ref": "PrivateSubnet2ID"
                    },
                    "PrivateIpAddresses": [{
                        "Primary": "true",
                        "PrivateIpAddress": {
                            "Ref": "NGINX2PrivateIP"
                        }
                    }],
                    "GroupSet": [{
                        "Ref": "NGINXInstancesSecurityGroup"
                    }]
                }],
                "Tags": [{
                    "Key": "Name",
                    "Value": "NGINXWebApp2"
                }, {
                    "Key": "Environment",
                    "Value": "Test"
                }],
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "", [
                                "#!/bin/bash -xe\n",
                                "hostname nginxwebapp2.example.com",
                                "\n",
                                "yum update -y",
                                "\n",
                                "/opt/aws/bin/cfn-init -v ",
                                "         --stack ", {
                                    "Ref": "AWS::StackName"
                                },
                                " --resource NGINXWebApp2",
                                " --configsets bootstrap_install ",
                                " --region ", {
                                    "Ref": "AWS::Region"
                                },
                                "\n"
                            ]
                        ]
                    }
                }
            }
        },
        "IAMRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [{
                        "Effect": "Allow",
                        "Principal": {
                            "Service": ["ec2.amazonaws.com"]
                        },
                        "Action": ["sts:AssumeRole"]
                    }]
                },
                "Path": "/",
                "Policies": [{
                    "PolicyName": "NGINXQuickStartIAMRole",
                    "PolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [{
                            "Effect": "Allow",
                            "Action": [
                                "cloudformation:DescribeStackResources"
                            ],
                            "Resource": [
                                "*"
                            ]
                        }]
                    }
                }]
            }
        },
        "IAMInstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [{
                    "Ref": "IAMRole"
                }]
            }
        },
        "NGINXELB": {
            "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
            "Properties": {
                "CrossZone": "true",
                "HealthCheck": {
                    "Target": "HTTP:8080/status.html",
                    "HealthyThreshold": "10",
                    "UnhealthyThreshold": "2",
                    "Interval": "30",
                    "Timeout": "5"
                },
                "LBCookieStickinessPolicy": [{
                    "PolicyName": "NGINXStatusHealthPagePolicy",
                    "CookieExpirationPeriod": "300"
                }],
                "LoadBalancerName": "NGINXELB",
                "Listeners": [{
                    "LoadBalancerPort": "80",
                    "InstancePort": "80",
                    "Protocol": "HTTP"
                }, {
                    "LoadBalancerPort": "8080",
                    "InstancePort": "8080",
                    "Protocol": "HTTP",
                    "PolicyNames": ["NGINXStatusHealthPagePolicy"]
                }],
                "Subnets": {
                    "Fn::Join": [
                        ",",
                        [
                            {
                                "Ref": "PublicSubnet1ID"
                            },
                            {
                                "Ref": "PublicSubnet2ID"
                            }
                        ]
                    ]
                },
                "Scheme": "internet-facing",

                "SecurityGroups": [{
                    "Ref": "NGINXELBSecurityGroup"
                }],
                "Tags": [{
                    "Key": "Name",
                    "Value": "NGINXELB"
                }, {
                    "Key": "Environment",
                    "Value": "Test"
                }]
            }
        },
        "NGINXLaunchConfiguration": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "bootstrap_install": [
                            "install_cfn",
                            "prepare_system",
                            "configure_nginx"
                        ]
                    },
                    "install_cfn": {
                        "files": {
                            "/etc/cfn/cfn-hup.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "", [
                                            "[main]\n",
                                            "stack=", {
                                                "Ref": "AWS::StackId"
                                            },
                                            "\n",
                                            "region=", {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                },
                                "mode": "000400",
                                "owner": "root",
                                "group": "root"
                            },
                            "/etc/cfn/hooks.d/cfn-auto-reloader.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "", [
                                            "[cfn-auto-reloader-hook]\n",
                                            "triggers=post.update\n",
                                            "path=Resources.NGINXLaunchConfiguration.Metadata.AWS::CloudFormation::Init\n",
                                            "action=/opt/aws/bin/cfn-init -v ",
                                            "         --stack ", {
                                                "Ref": "AWS::StackName"
                                            },
                                            "         --resource NGINXLaunchConfiguration ",
                                            "         --configsets bootstrap_install ",
                                            "         --region ", {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                },
                                "mode": "000400",
                                "owner": "root",
                                "group": "root"
                            }
                        },
                        "services": {
                            "sysvinit": {
                                "cfn-hup": {
                                    "enabled": "true",
                                    "ensureRunning": "true",
                                    "files": [
                                        "/etc/cfn/cfn-hup.conf",
                                        "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
                                    ]
                                }
                            }
                        }
                    },
                    "prepare_system": {
                        "commands": {
                            "01-mkdir /usr/share/nginx/images": {
                                "command": "mkdir /usr/share/nginx/images"
                            }
                        }
                    },
                    "configure_nginx": {
                        "files": {
                            "/etc/nginx/conf.d/lb.conf": {
                                "source": {
                                    "Fn::Join": [
                                        "/",
                                        [
                                            {
                                                "Fn::FindInMap": [
                                                    "AWSInfoRegionMap",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    "QuickStartS3URL"
                                                ]
                                            },
                                            {
                                                "Ref": "QSS3BucketName"
                                            },
                                            {
                                                "Ref": "QSS3KeyPrefix"
                                            },
                                            "scripts/lb.conf"
                                        ]
                                    ]
                                }
                            },
                            "/etc/nginx/conf.d/status.conf": {
                                "source": {
                                    "Fn::Join": [
                                        "/",
                                        [
                                            {
                                                "Fn::FindInMap": [
                                                    "AWSInfoRegionMap",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    "QuickStartS3URL"
                                                ]
                                            },
                                            {
                                                "Ref": "QSS3BucketName"
                                            },
                                            {
                                                "Ref": "QSS3KeyPrefix"
                                            },
                                            "scripts/status.conf"
                                        ]
                                    ]
                                }
                            },
                            "/usr/share/nginx/images/nginx.png": {
                                "source": {
                                    "Fn::Join": [
                                        "/",
                                        [
                                            {
                                                "Fn::FindInMap": [
                                                    "AWSInfoRegionMap",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    "QuickStartS3URL"
                                                ]
                                            },
                                            {
                                                "Ref": "QSS3BucketName"
                                            },
                                            {
                                                "Ref": "QSS3KeyPrefix"
                                            },
                                            "scripts/nginx.png"
                                        ]
                                    ]
                                }
                            },
                            "/usr/share/nginx/images/favicon.ico": {
                                "source": {
                                    "Fn::Join": [
                                        "/",
                                        [
                                            {
                                                "Fn::FindInMap": [
                                                    "AWSInfoRegionMap",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    "QuickStartS3URL"
                                                ]
                                            },
                                            {
                                                "Ref": "QSS3BucketName"
                                            },
                                            {
                                                "Ref": "QSS3KeyPrefix"
                                            },
                                            "scripts/favicon.ico"
                                        ]
                                    ]
                                }
                            }
                        },
                        "commands": {
                            "01-mv /etc/nginx/conf.d/default.conf": {
                                "command": "mv /etc/nginx/conf.d/default.conf /etc/nginx/conf.d/default.conf.bak"
                            }
                        },
                        "services": {
                            "sysvinit": {
                                "nginx": {
                                    "enabled": "true",
                                    "ensureRunning": "true",
                                    "files": ["/etc/nginx/conf.d/lb.conf"]
                                }
                            }
                        }
                    }
                }
            },
            "Properties": {
                "AssociatePublicIpAddress": "true",
                "IamInstanceProfile": {
                    "Ref": "IAMInstanceProfile"
                },
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSAMIRegionMap", {
                            "Ref": "AWS::Region"
                        },
                        "NGINXPLUSAMZNLINUXHVM"
                    ]
                },
                "InstanceType": {
                    "Ref": "NGINXInstanceType"
                },
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "SecurityGroups": [{
                    "Ref": "NGINXInstancesSecurityGroup"
                }],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "", [
                                "#!/bin/bash -xe\n",
                                "yum update -y",
                                "\n",
                                "/opt/aws/bin/cfn-init -v ",
                                "         --stack ", {
                                    "Ref": "AWS::StackName"
                                },
                                " --resource NGINXLaunchConfiguration",
                                " --configsets bootstrap_install ",
                                " --region ", {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                "/opt/aws/bin/cfn-signal -e $? ",
                                "         --stack ", {
                                    "Ref": "AWS::StackName"
                                },
                                "         --resource NGINXAutoscaleGroup",
                                "         --region ", {
                                    "Ref": "AWS::Region"
                                },
                                "\n"
                            ]
                        ]
                    }
                }
            }
        },
        "NGINXAutoscaleGroup": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "AvailabilityZones": {
                    "Ref": "AvailabilityZones"
                },
                "Cooldown": "300",
                "MaxSize": "2",
                "MinSize": "1",
                "DesiredCapacity": "2",
                "HealthCheckGracePeriod": "300",
                "HealthCheckType": "EC2",
                "VPCZoneIdentifier": {
                    "Fn::Join": [
                        ",",
                        [
                            {
                                "Ref": "PublicSubnet1ID"
                            },
                            {
                                "Ref": "PublicSubnet2ID"
                            }
                        ]
                    ]
                },
                "LaunchConfigurationName": {
                    "Ref": "NGINXLaunchConfiguration"
                },
                "LoadBalancerNames": [{
                    "Ref": "NGINXELB"
                }],
                "Tags": [{
                    "Key": "Name",
                    "Value": "NGINX Plus Load Balancer",
                    "PropagateAtLaunch": true
                }, {
                    "Key": "Environment",
                    "Value": "Test",
                    "PropagateAtLaunch": true
                }]
            },
            "CreationPolicy": {
                "ResourceSignal": {
                    "Count": "1",
                    "Timeout": "PT15M"
                }
            }
        },
        "HostedZone": {
            "Type": "AWS::Route53::HostedZone",
            "Properties": {
                "HostedZoneConfig": {
                    "Comment": "Hosted zone for example.com"
                },
                "Name": "example.com",
                "VPCs": [{
                    "VPCId": {
                        "Ref": "VPCID"
                    },
                    "VPCRegion": {
                        "Ref": "AWS::Region"
                    }
                }]
            }
        },
        "WebApp1DNSRecord": {
            "Type": "AWS::Route53::RecordSet",
            "DependsOn": "HostedZone",
            "Properties": {
                "HostedZoneId": {
                    "Fn::Join": [
                        "", [
                            "/hostedzone/", {
                                "Ref": "HostedZone"
                            }
                        ]
                    ]
                },
                "Name": "nginxwebapp1.example.com",
                "Type": "A",
                "TTL": "900",
                "ResourceRecords": [{
                    "Ref": "NGINX1PrivateIP"
                }]
            }
        },
        "WebApp2DNSRecord": {
            "Type": "AWS::Route53::RecordSet",
            "DependsOn": "HostedZone",
            "Properties": {
                "HostedZoneId": {
                    "Fn::Join": [
                        "", [
                            "/hostedzone/", {
                                "Ref": "HostedZone"
                            }
                        ]
                    ]
                },
                "Name": "nginxwebapp2.example.com",
                "Type": "A",
                "TTL": "900",
                "ResourceRecords": [{
                    "Ref": "NGINX2PrivateIP"
                }]
            }
        },
        "WebApp1CNameDNSRecord": {
            "Type": "AWS::Route53::RecordSet",
            "DependsOn": "HostedZone",
            "Properties": {
                "HostedZoneId": {
                    "Fn::Join": [
                        "", [
                            "/hostedzone/", {
                                "Ref": "HostedZone"
                            }
                        ]
                    ]
                },
                "Name": "webapp1.example.com",
                "Type": "CNAME",
                "TTL": "900",
                "ResourceRecords": [
                    "nginxloadbalancer.example.com"
                ]
            }
        },
        "WebApp2CNameDNSRecord": {
            "Type": "AWS::Route53::RecordSet",
            "DependsOn": "HostedZone",
            "Properties": {
                "HostedZoneId": {
                    "Fn::Join": [
                        "", [
                            "/hostedzone/", {
                                "Ref": "HostedZone"
                            }
                        ]
                    ]
                },
                "Name": "webapp2.example.com",
                "Type": "CNAME",
                "TTL": "900",
                "ResourceRecords": [
                    "nginxloadbalancer.example.com"
                ]
            }
        },
        "NGINXELBCNameDNSRecord": {
            "Type": "AWS::Route53::RecordSet",
            "DependsOn": "HostedZone",
            "Properties": {
                "HostedZoneId": {
                    "Fn::Join": [
                        "", [
                            "/hostedzone/", {
                                "Ref": "HostedZone"
                            }
                        ]
                    ]
                },
                "Name": "nginxloadbalancer.example.com",
                "Type": "CNAME",
                "TTL": "900",
                "ResourceRecords": [{
                    "Fn::GetAtt": ["NGINXELB", "DNSName"]
                }]
            }
        }
    },
    "Outputs": {
        "NGINXELBDNSName": {
            "Value": {
                "Fn::GetAtt": [
                    "NGINXELB",
                    "DNSName"
                ]
            },
            "Description": "Public DNS Name for the NGINXELB"
        },
        "NGINXWebApp1DNSName": {
            "Value": {
                "Fn::GetAtt": [
                    "NGINXWebApp1",
                    "PublicDnsName"
                ]
            },
            "Description": "Public DNS Name for the NGINXWebApp1 Server"
        },
        "NGINXWebApp2DNSName": {
            "Value": {
                "Fn::GetAtt": [
                    "NGINXWebApp2",
                    "PublicDnsName"
                ]
            },
            "Description": "Public DNS Name for the NGINXWebApp2 Server"
        },
        "BastionHostDNSName": {
            "Value": {
                "Fn::GetAtt": [
                    "BastionHost",
                    "PublicDnsName"
                ]
            },
            "Description": "Public DNS Name for the BastionHost Server"
        }
    }
}
